{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jyotirmoy\\\\Downloads\\\\basic-banking-app-main\\\\client\\\\src\\\\Components\\\\TransferAmount\\\\Transfer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as Reactbootstrap from 'react-bootstrap';\nimport './Transfer.css';\nimport Avatar from '../Assets/user-avatar.png';\nimport { useHistory } from 'react-router-dom';\nimport { updateHandler } from './updateHandler'; //create a fuction to fetch and update info accordingly.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transfer = props => {\n  _s();\n\n  const history = useHistory(); //Customer-Details, senderID, RecepientID, Amount states\n\n  const [customs] = useState(props.location.state.users);\n  const [receiver, setReceiver] = useState('select recepient');\n  const [amount, setAmount] = useState('Entered amount');\n  const [sender] = useState(props.match.params.id); //Senders details \n\n  const temp = customs.find(user => user._id === props.match.params.id); //Amount input handler\n\n  function amountHandler(event) {\n    // console.log(event.target.value);\n    setAmount(event.target.value);\n  } //Receipient selector handler\n\n\n  function selectHandler(event) {\n    setReceiver(event.target.value);\n  } //transferamount\n\n\n  const transferHandler = (s, r, a) => {\n    const senderComps = customs.find(user => user._id === s);\n    const receiverComps = customs.find(user => user._id === r);\n    const transAmount = a; // console.log(transAmount);\n\n    senderComps.balance = senderComps.balance - transAmount; // console.log(senderComps);\n\n    receiverComps.balance = Number(receiverComps.balance) + Number(transAmount); // console.log(receiverComps);\n\n    updateHandler(senderComps, receiverComps, transAmount);\n    history.push('/success');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transfer-card\",\n    children: /*#__PURE__*/_jsxDEV(Reactbootstrap.Card, {\n      style: {\n        width: '22rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Reactbootstrap.Card.Img, {\n        variant: \"top\",\n        src: Avatar,\n        className: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Reactbootstrap.Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Reactbootstrap.Card.Title, {\n          children: [\"Username: \", temp.firstname, \" \", temp.lastname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Reactbootstrap.Card.Title, {\n          children: [\"Balance: \\u20B9.\", temp.balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Reactbootstrap.Form, {\n          children: [/*#__PURE__*/_jsxDEV(Reactbootstrap.Row, {\n            className: \"contentrow\",\n            children: [/*#__PURE__*/_jsxDEV(Reactbootstrap.Col, {\n              md: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(Reactbootstrap.Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Enter Amount:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 64\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Reactbootstrap.Col, {\n              children: /*#__PURE__*/_jsxDEV(Reactbootstrap.Form.Control, {\n                type: \"number\",\n                placeholder: \"Enter Amount\",\n                onChange: event => amountHandler(event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Reactbootstrap.Row, {\n            className: \"contentrow\",\n            children: [/*#__PURE__*/_jsxDEV(Reactbootstrap.Col, {\n              children: /*#__PURE__*/_jsxDEV(Reactbootstrap.Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Transfer To:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 64\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Reactbootstrap.Col, {\n              md: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(Reactbootstrap.Form.Control, {\n                className: \"sender\",\n                as: \"select\",\n                onChange: e => selectHandler(e),\n                value: receiver,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Select Recipient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this), customs.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: user._id,\n                  children: [user.firstname, \" \", user.lastname]\n                }, user.customerId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 63\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Reactbootstrap.Row, {\n            className: \"contentrow\",\n            children: [/*#__PURE__*/_jsxDEV(Reactbootstrap.Col, {\n              children: /*#__PURE__*/_jsxDEV(Reactbootstrap.Button, {\n                className: \"Buttons\",\n                onClick: () => history.push('/users'),\n                variant: \"danger\",\n                children: \"Go Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Reactbootstrap.Col, {\n              children: /*#__PURE__*/_jsxDEV(Reactbootstrap.Button, {\n                className: \"Buttons\",\n                onClick: () => transferHandler(sender, receiver, amount),\n                variant: \"success\",\n                children: \"Transfer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Transfer, \"ntJ4jW4CXtMXpnjCSO9nclxR+e4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Transfer;\nexport default Transfer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"sources":["C:/Users/Jyotirmoy/Downloads/basic-banking-app-main/client/src/Components/TransferAmount/Transfer.js"],"names":["React","useState","Reactbootstrap","Avatar","useHistory","updateHandler","Transfer","props","history","customs","location","state","users","receiver","setReceiver","amount","setAmount","sender","match","params","id","temp","find","user","_id","amountHandler","event","target","value","selectHandler","transferHandler","s","r","a","senderComps","receiverComps","transAmount","balance","Number","push","width","firstname","lastname","e","map","customerId"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport * as Reactbootstrap from 'react-bootstrap';\nimport './Transfer.css';\nimport Avatar from '../Assets/user-avatar.png';\nimport {useHistory} from 'react-router-dom';\nimport { updateHandler } from './updateHandler';\n//create a fuction to fetch and update info accordingly.\n\nconst Transfer =(props)=>{\n\n    const history = useHistory();\n\n    //Customer-Details, senderID, RecepientID, Amount states\n    const [customs] = useState(props.location.state.users);\n    const [receiver, setReceiver] = useState('select recepient');\n    const [amount, setAmount] = useState('Entered amount');\n    const [sender] = useState(props.match.params.id);\n    //Senders details \n    const temp = customs.find((user)=>user._id === props.match.params.id);    \n    \n    \n    //Amount input handler\n    function amountHandler(event){\n        // console.log(event.target.value);\n        setAmount(event.target.value);\n    }\n    \n    //Receipient selector handler\n    function selectHandler(event){\n        setReceiver(event.target.value);\n    }\n\n    //transferamount\n    const transferHandler = (s,r,a) => {\n        const senderComps = customs.find((user)=>user._id === s);\n        const receiverComps = customs.find((user)=>user._id === r);\n        const transAmount = a;\n        // console.log(transAmount);\n        senderComps.balance = senderComps.balance - transAmount;\n        // console.log(senderComps);\n        receiverComps.balance = Number(receiverComps.balance) + Number(transAmount);\n        // console.log(receiverComps);\n        updateHandler(senderComps,receiverComps,transAmount);\n        history.push('/success');\n        \n    }\n    \n\n        return (\n            <div className=\"transfer-card\">            \n               <Reactbootstrap.Card style={{ width: '22rem' }}>\n                    <Reactbootstrap.Card.Img variant=\"top\" src={Avatar} className=\"avatar\" />\n                    <Reactbootstrap.Card.Body>\n                        <Reactbootstrap.Card.Title>Username: {temp.firstname} {temp.lastname}</Reactbootstrap.Card.Title>\n                        <Reactbootstrap.Card.Title>Balance: ₹.{temp.balance}</Reactbootstrap.Card.Title>\n                        <Reactbootstrap.Form>\n                            <Reactbootstrap.Row className=\"contentrow\">\n                                <Reactbootstrap.Col md=\"auto\">\n                                    <Reactbootstrap.Form.Label><b>Enter Amount:</b></Reactbootstrap.Form.Label>\n                                </Reactbootstrap.Col>\n                                <Reactbootstrap.Col>\n                                    <Reactbootstrap.Form.Control type=\"number\" placeholder=\"Enter Amount\" onChange={(event)=>amountHandler(event)}/>\n                                </Reactbootstrap.Col>\n                            </Reactbootstrap.Row> \n                            <Reactbootstrap.Row className=\"contentrow\">\n                                <Reactbootstrap.Col>\n                                    <Reactbootstrap.Form.Label><b>Transfer To:</b></Reactbootstrap.Form.Label>\n                                </Reactbootstrap.Col>\n                                <Reactbootstrap.Col md=\"auto\">\n                                    <Reactbootstrap.Form.Control className=\"sender\" as=\"select\" onChange={(e)=>selectHandler(e)} value={receiver}>\n                                        <option>Select Recipient</option>\n                                         {customs.map((user)=><option key={user.customerId} value={user._id}>{user.firstname} {user.lastname}</option>)}\n                                    </Reactbootstrap.Form.Control>\n                                </Reactbootstrap.Col>\n                            </Reactbootstrap.Row>\n                            <Reactbootstrap.Row className=\"contentrow\">\n                                <Reactbootstrap.Col>\n                                    <Reactbootstrap.Button className=\"Buttons\" onClick={()=>history.push('/users')} variant=\"danger\">Go Back</Reactbootstrap.Button>\n                                </Reactbootstrap.Col>\n                                <Reactbootstrap.Col>\n                                    <Reactbootstrap.Button className=\"Buttons\" onClick={()=>transferHandler(sender,receiver,amount)} variant=\"success\">Transfer</Reactbootstrap.Button>\n                                </Reactbootstrap.Col>\n                            </Reactbootstrap.Row>\n                        </Reactbootstrap.Form>\n                    </Reactbootstrap.Card.Body>\n                </Reactbootstrap.Card>\n            </div>\n         );\n    \n}\n \nexport default Transfer;"]},"metadata":{},"sourceType":"module"}